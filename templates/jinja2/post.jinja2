<html>
<meta charset="UTF-8">
<link rel="stylesheet" type="text/css" href="/css/post.css">
<title>{{ post.name }}</title>
</html>
<body>
<div class="post_wrapper">
    <div class="box url">
        <a id="siteurl" href="/">redsys.pw</a>/<a id="path", href="{{ post.name | urlencode }}.html">{{ post.name }}</a> <!-- PATH TO FILE, IF JS -->
    </div>
    <div class="box blank"></div>
        <div class="box title">
        <div class="left">{{ post.name }}</div>{% if post.year %}
        <div class="right">[{{ post.year }}]</div>{% endif %}</div>
    <div class="box image"><img src="{{ post.image }}"></div>
    <div class="box tags">
        <ul style="list-style-type: none;">
            {% for other_parent in post.parent_names %}
                <li ><a class="parent_url" href="{{ '../' ~ other_parent | urlencode }}.html"><span style="transform: rotate(-90deg);display: inline-block;">âž¤</span> /{{ other_parent }}</a></li>
            {% endfor %}
            {% for child in post.children %}
                <li ><a class="child_url" href="{{ post.name ~ '/' ~  child | urlencode }}.html">/{{ child }}</a></li>
            {%endfor%}
        </ul>
    </div>
    <div class="box body">
        {{ post.body | parsemd | safe }}
    </div>
    <div class="box link">
        <div class="link url">
            <a href={{ post.dl_url }}>{{ post.dl_url }}</a>
        </div>
        <div class="link blank"></div>
    </div>
</div>
</body>
<script type="text/javascript">
// if we're in a cycle, we'd have to generate an infinite number of symlinks in the current system
// so instead, if we encounter a node we've already seen, we retreat back up the path to the previous
// occurrence.
function update_cyclical_children(classname){
let parents = window.location.pathname.split('/').slice(1, -1);
let children = document.getElementsByClassName(classname);
Array.from(children).forEach(
	function(child, index) { 
		let nextPost = child.getAttribute("href").split('/').slice(-1)[0].slice(0,-5);
		for (var i in parents) {
			if (parents[i] === nextPost) {
				console.log(i);
				let newurl = parents.slice(0, i).join('/') + "/" + nextPost + ".html";
				children.item(index).href = newurl
				console.log(newurl);
				return
         	}
        }
	}) 
}
function update_path(){
    let path = window.location.pathname.split('/').slice(1, -1);
    var sitenode = document.getElementById('siteurl');
    for (var i = path.length; i > 0; i--){
        let a = document.createElement('a');
        a.href = '/' + path.slice(0, i).join('/') + '.html';
		console.log(i, path.slice(0,i));
        a.text = decodeURI('/' + path[i-1]);
        sitenode.parentNode.insertBefore(a, sitenode.nextSibling);
    }
}

update_cyclical_children();
update_path();
</script>
</html>